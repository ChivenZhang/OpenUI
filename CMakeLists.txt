cmake_minimum_required (VERSION 3.8)
project(OpenUI)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY  ${CMAKE_BINARY_DIR})
set(OPENUI_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR} CACHE STRING "OpenUI Source Path")

option(OPENUI_ENABLE_SAMPLE "Enable Sample Compile" OFF)

include_directories(${OPENUI_SOURCE_DIR})
include_directories(${OPENUI_SOURCE_DIR}/External/stb)
include_directories(${OPENUI_SOURCE_DIR}/External/x64-windows/include)
if(CMAKE_BUILD_TYPE MATCHES Debug)
link_directories(${OPENUI_SOURCE_DIR}/External/x64-windows/debug/lib)
else()
link_directories(${OPENUI_SOURCE_DIR}/External/x64-windows/lib)
endif()

add_subdirectory(OpenUI)

if(OPENUI_ENABLE_SAMPLE)
include_directories(${OPENUI_SOURCE_DIR}/External/x64-windows/include/pango-1.0)
include_directories(${OPENUI_SOURCE_DIR}/External/x64-windows/include/cairo)
include_directories(${OPENUI_SOURCE_DIR}/External/x64-windows/include/harfbuzz)
include_directories(${OPENUI_SOURCE_DIR}/External/x64-windows/include/glib-2.0)
add_subdirectory(Sample)
endif()